if __name__ == "__main__":
    class Животное:
        """
            Базовый класс для представления животных.

            Атрибуты:
            - название (str): Название животного.
            - возраст (int): Возраст животного в годах.

            Методы:
            - __init__: Конструктор класса для инициализации нового экземпляра животного.
            - __str__: Возвращает строковое представление животного.
            - __repr__: Возвращает официальное строковое представление объекта.
            - издать_звук: Имитирует звук, издаваемый животным.
            """

        def __init__(self, название: str, возраст: int) -> None:
            """Инициализирует объект класса Животное с указанными названием и возрастом."""
            self.название: str = название
            self.возраст: int = возраст

        def __str__(self) -> str:
            """Возвращает официальное строковое представление объекта класса Животное."""
            return f"{self.название}, возраст {self.возраст} лет"

        def __repr__(self) -> str:
            """Возвращает официальное строковое представление объекта класса Животное."""
            return f"{self.__class__.__name__}('{self.название}', {self.возраст})"

        def издать_звук(self) -> str:
            """Имитирует звук, издаваемый животным."""
            return "Издает звук"


    class Собака(Животное):
        """
            Класс Собака, наследуется от класса Животное, представляет собаку со специфическими атрибутами и поведением.

            Атрибуты:
            - порода (str): Порода собаки.

            Методы:
            - __init__: Конструктор класса для инициализации собаки с заданными атрибутами.
            - издать_звук: Перегруженный метод, возвращающий звук, характерный для собаки.
            - принести_палку: Демонстрирует способность собаки принести палку по команде.
            """

        def __init__(self, название: str, возраст: int, порода: str) -> None:
            """Инициализация собаки с названием, возрастом и породой."""
            super().__init__(название, возраст)
            self.порода: str = порода

        def __str__(self) -> str:
            """"Инициализация собаки с названием, возрастом и породой."""
            return f"{super().__str__()}, порода {self.порода}"

        def издать_звук(self) -> str:
            """Возвращает звук, который собаки используют для общения и подачи сигналов ('Гав')."""
            return "Гав"

        def принести_палку(self) -> str:
            """Демонстрирует способность собаки принести палку."""
            return "Принесла палку"


    class Обезьяна(Животное):
        """
            Класс Обезьяна, наследуется от класса Животное, описывает обезьяну с уникальными атрибутами и поведением.

            Атрибуты:
            - вид (str): Вид обезьяны.

            Методы:
            - __init__: Конструктор класса для инициализации обезьяны с заданными атрибутами.
            - лазать_по_деревьям: Показывает способность обезьяны лазать по деревьям.
            - _покормить_своего_ребенка: Непубличный метод, демонстрирующий уход за потомством.
            """

        def __init__(self, название: str, возраст: int, вид: str) -> None:
            """Инициализация обезьяны с названием, возрастом и видом."""
            super().__init__(название, возраст)
            self.вид: str = вид

        def __str__(self) -> str:
            """"Инициализация обезьяны с названием, возрастом и видом."""
            return f"{super().__str__()}, вид {self.вид}"

        # Непубличный метод преедназначенный для кормления ребенка, является слишком личным
        def _покормить_своего_ребенка(self) -> str:
            """
                    Непубличный метод, иллюстрирующий как обезьяна кормит своего ребенка.
                    Подчеркивает инстинкт ухода за потомством у обезьян.
                    """
            return "Кормит своего ребенка"

        def лазать_по_деревьям(self) -> str:
            """Демонстрирует способность обезьяны лазать по деревьям."""
            return "Лазит по деревьям"


    class Кошка(Животное):
        """
            Класс Кошка наследуется от класса Животное и представляет специфические характеристики
            и поведение кошек.

            Атрибуты:
            - название (str): Название кошки.
            - возраст (int): Возраст кошки в годах.
            - окрас (str): Описание окраса шерсти кошки.

            Методы:
            - __init__: Конструктор класса для инициализации нового экземпляра кошки с заданными атрибутами.
            - __str__: Возвращает строковое представление кошки, включающее её название, возраст и окрас.
            - _помыть_шерсть: Непубличный метод, описывающий процесс ухода кошки за своей шерстью.
              Этот метод не предназначен для вызова извне класса.
            - ловить_мышей: Описывает способность кошки ловить мышей, демонстрируя её охотничьи инстинкты.
            """

        def __init__(self, название: str, возраст: int, окрас: str) -> None:
            """Инициализирует объект класса Кошка с указанными названием, возрастом и окрасом."""
            super().__init__(название, возраст)
            self.окрас: str = окрас

        def __str__(self) -> str:
            """Возвращает строковое представление объекта класса Кошка."""
            return f"{super().__str__()}, окрас {self.окрас}"

        # Непубличный метод ухода за шерстью, так как является интимным и связан с личной гигиеной

        def _помыть_шерсть(self) -> str:
            """
                    Непубличный метод для имитации процесса ухода кошкой за своей шерстью.
                    Этот метод подчеркивает самостоятельность и чистоплотность кошек.

                    Возвращает:
                    str: Сообщение о том, что кошка моет свою шерсть.
                    """
            return "Моет свою шерсть"

        def ловить_мышей(self) -> str:
            """
                    Описывает поведение кошки при охоте на мышей.

                    Возвращает:
                    str: Сообщение о том, что кошка ловит мышей.
                    """
            return "Ловит мышей"


    pass
